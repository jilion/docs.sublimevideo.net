h2. <%= title('Cuepoints') %>

h3(#Methods). "Methods":#Methods

These API methods are to be called on a @cuepoints@ object, which you can retrieve in the following way

bc(language-javascript). var cuepoints = sublime.player(elementOrId).cuepoints;



h3(#add). "@cuepoints.add([id,] cuepoints, callback)@":#add

* <span class="param">@id@</span> (@String@) - A string representing the name of the list of cuepoints. Pass this parameter only if you plan to remove the list at a given time.

* <span class="param">@cuepoints@</span> (@Array@) - A list of numbers representing the cuepoints.

* <span class="param">@callback@</span> (@Function@) - The function to call when a cuepoint is reached.


Register the list of cuepoints to the player. If a list with the same provided id already exsits, it will be replaced by the new list.

**Example - registering cuepoints**

bc(language-javascript). player.cuepoints.add([1.3, 6, 9], function(player, cuepoint) {
  console.log('index: ' + cuepoint.index);
  console.log('time: ' + cuepoint.time);
});

**Example - registering cuepoints with an id**

bc(language-javascript). player.cuepoints.add('list_id', [1.3, 9], function(player, cuepoint, id) {
  console.log('list id: ' + id);
});


h3(#remove). "@cuepoints.remove(id)@":#remove

* <span class="param">@id@</span> (@String@) - The id of the list to be removed.

Remove the list of cuepoints with the given id. The call has no effect if a list with the given id cannot be found.

**Example - removing a list of cuepoints**

bc(language-javascript). player.cuepoints.remove('list_id');



h3(#removeAll). "@cuepoints.removeAll()@":#removeAll

Remove all cuepoints registered to the video player.

**Example - removing all registered lists of cuepoints**

bc(language-javascript). player.cuepoints.removeAll();
