- @page_title = "Lightbox API"

%h2= @page_title

:textile
  *Methods*
  "(c)@open@":/beta/javascript-api/lightbox#open "(c)@close@":/beta/javascript-api/lightbox#close "(c)@on@":/beta/javascript-api/lightbox#on

  *Events*
  "(c)@contentready@":/beta/javascript-api/lightbox#event-contentready "(c)@didopen@":/beta/javascript-api/lightbox#event-didopen "(c)@didclose@":/beta/javascript-api/lightbox#event-didclose


  See also "Using the JavaScript API":/beta/javascript-api/usage, "Application API":/beta/javascript-api/application and "Player API":/beta/javascript-api/player.


  h3(#methods). Methods

  These APIs are to be called on @lightbox@ objects, you can retrieve them in the following way

  bc(language-javascript). var lightbox = sublime.lightbox(elementOrId);

  which is equivalent to

  bc(language-javascript). var lightbox = sublime(elementOrId);



  h3(#open). "@lightbox.open()@":#open

  Opens the lightbox. If it's already opened, this call has no effect.

  h3(#close). "@lightbox.close()@":#close

  Closes the lightbox. If it's already closed, this call has no effect.




  h3(#on). "@lightbox.on(eventOrHash, [callback])@":#on

  * <span class="param">@eventOrHash@</span> (@String@ | @Object@) - A string representing the event name to listen, or an object where its keys are events and its values are callbacks.

  * <span class="param">@callback@</span> (@Function@) - The function to call when the event occurs. Pass this parameter only if the first one is an event (@String@).

  Registers and invokes the given callbacks every time that the corresponding events occur.

  **Example - listening a single event**

  bc(language-javascript). sublime('my_lightbox_trigger_id').on('didopen', function(lightbox) {
    console.log('lightbox opened.');
  })

  **Example - listening more events**

  bc(language-javascript). sublime('my_lightbox_trigger_id').on({
    contentready: function(lightbox, player) { console.log('content ready.') },
    didopen:      function(lightbox) { console.log('lightbox opened.') },
    didclose:     function(lightbox) { console.log('lightbox closed.') }
  })




  h3(#events). Events

  These are the events supported by the lightbox. You listen to these events by registering
  via the method "(c)@lightbox.on@":/beta/javascript-api/lightbox#on

  bc(language-javascript). sublime('my_lightbox_trigger_id').on('<event_name>', my_callback_function)

  h3(#event-contentready). "@contentready@":#event-contentready

  Fired when the lightbox's content has been prepared.

  *callback parameters*

  * <span class="param">@lightbox@</span> (@Object@) - The lightbox api object.
  * <span class="param">@content@</span> (@Object@) - The content api object, which in most cases will be the player.

  h3(#event-didopen). "@didopen@":#event-didopen

  Fired when the playback starts.

  *Callback parameters*

  * <span class="param">@lightbox@</span> (@Object@) - The lightbox api object.


  h3(#event-didclose). "@didclose@":#event-didclose

  Fired when the playback ends.

  *Callback parameters*

  * <span class="param">@lightbox@</span> (@Object@) - The lightbox api object.






